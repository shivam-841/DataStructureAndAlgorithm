Approach: Take the first element , reverse rest of the stack and place the first element at last

Code:
    class Solution{
  private:
      void placeAtLast(stack<int> &St, int temp){
          if(St.empty()){
              St.push(temp);
              return;
          }
          int topEle=St.top();
          St.pop();
          placeAtLast(St,temp);
          St.push(topEle);
      }
  public:
      void Reverse(stack<int> &St){
          if(St.empty()) return;
          int temp = St.top();
          St.pop();
          Reverse(St);
          placeAtLast(St,temp);
      }
  };

Time Complexity: O(n^2)
Space Complexity: O(n)

Note: For better time complexity use iterative approach
