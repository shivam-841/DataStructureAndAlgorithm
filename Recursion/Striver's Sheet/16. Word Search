Approach: Find the first element in the board the using that element find recursively all the next elements in the word where iterate in the word only horizontally and vertically.

Code:
  class Solution {
  private:
      bool rec(vector<vector<char>>& board, string word,int i, int j, int index){
          if(index==word.size()) return true;
          if(i<0 || j<0 || i>=board.size() || j>=board[0].size() || board[i][j]!=word[index]) return false;
          
          char temp = board[i][j];
          board[i][j]='#';
          bool found = rec(board,word,i+1,j,index+1) ||
                       rec(board,word,i-1,j,index+1) ||
                       rec(board,word,i,j+1,index+1) ||
                       rec(board,word,i,j-1,index+1);
          board[i][j]=temp;
          return found;
      }
  public:
      bool exist(vector<vector<char>>& board, string word) {
          int index=0;
          for(int i=0;i<board.size();i++){
              for(int j=0;j<board[i].size();j++){
                  if(board[i][j]==word[0]){
                      if(rec(board, word, i, j,0))
                          return true;
                  }
              }
          }
          return false;
      }
  };

Time Complexity: O(4^N)
Space Complexity: O(L) where L is the size of the word
